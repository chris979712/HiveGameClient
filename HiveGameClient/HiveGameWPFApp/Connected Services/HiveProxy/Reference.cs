//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HiveGameWPFApp.HiveProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessAccount", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HiveGameWPFApp.HiveProxy.Profile))]
    public partial class AccessAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccesAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int reputationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccesAccount {
            get {
                return this.idAccesAccountField;
            }
            set {
                if ((this.idAccesAccountField.Equals(value) != true)) {
                    this.idAccesAccountField = value;
                    this.RaisePropertyChanged("idAccesAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int reputation {
            get {
                return this.reputationField;
            }
            set {
                if ((this.reputationField.Equals(value) != true)) {
                    this.reputationField = value;
                    this.RaisePropertyChanged("reputation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Profile : HiveGameWPFApp.HiveProxy.AccessAccount {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nicknameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccount {
            get {
                return this.idAccountField;
            }
            set {
                if ((this.idAccountField.Equals(value) != true)) {
                    this.idAccountField = value;
                    this.RaisePropertyChanged("idAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idProfile {
            get {
                return this.idProfileField;
            }
            set {
                if ((this.idProfileField.Equals(value) != true)) {
                    this.idProfileField = value;
                    this.RaisePropertyChanged("idProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.imagePathField, value) != true)) {
                    this.imagePathField = value;
                    this.RaisePropertyChanged("imagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nickname {
            get {
                return this.nicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.nicknameField, value) != true)) {
                    this.nicknameField = value;
                    this.RaisePropertyChanged("nickname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string textField;
        
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string text {
            get {
                return this.textField;
            }
            set {
                if ((object.ReferenceEquals(this.textField, value) != true)) {
                    this.textField = value;
                    this.RaisePropertyChanged("text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LeaderBoardPlayer", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class LeaderBoardPlayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imageProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalDrawMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalLostMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int totalWonMatchesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccount {
            get {
                return this.idAccountField;
            }
            set {
                if ((this.idAccountField.Equals(value) != true)) {
                    this.idAccountField = value;
                    this.RaisePropertyChanged("idAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imageProfile {
            get {
                return this.imageProfileField;
            }
            set {
                if ((object.ReferenceEquals(this.imageProfileField, value) != true)) {
                    this.imageProfileField = value;
                    this.RaisePropertyChanged("imageProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalDrawMatches {
            get {
                return this.totalDrawMatchesField;
            }
            set {
                if ((this.totalDrawMatchesField.Equals(value) != true)) {
                    this.totalDrawMatchesField = value;
                    this.RaisePropertyChanged("totalDrawMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalLostMatches {
            get {
                return this.totalLostMatchesField;
            }
            set {
                if ((this.totalLostMatchesField.Equals(value) != true)) {
                    this.totalLostMatchesField = value;
                    this.RaisePropertyChanged("totalLostMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalMatches {
            get {
                return this.totalMatchesField;
            }
            set {
                if ((this.totalMatchesField.Equals(value) != true)) {
                    this.totalMatchesField = value;
                    this.RaisePropertyChanged("totalMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int totalWonMatches {
            get {
                return this.totalWonMatchesField;
            }
            set {
                if ((this.totalWonMatchesField.Equals(value) != true)) {
                    this.totalWonMatchesField = value;
                    this.RaisePropertyChanged("totalWonMatches");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserVerificator", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class UserVerificator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserSession", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class UserSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codeMatch {
            get {
                return this.codeMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.codeMatchField, value) != true)) {
                    this.codeMatchField = value;
                    this.RaisePropertyChanged("codeMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccount {
            get {
                return this.idAccountField;
            }
            set {
                if ((this.idAccountField.Equals(value) != true)) {
                    this.idAccountField = value;
                    this.RaisePropertyChanged("idAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MatchCreator", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class MatchCreator : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateMatchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idCreatorAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string stateMatchField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string codeMatch {
            get {
                return this.codeMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.codeMatchField, value) != true)) {
                    this.codeMatchField = value;
                    this.RaisePropertyChanged("codeMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateMatch {
            get {
                return this.dateMatchField;
            }
            set {
                if ((this.dateMatchField.Equals(value) != true)) {
                    this.dateMatchField = value;
                    this.RaisePropertyChanged("dateMatch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCreatorAccount {
            get {
                return this.idCreatorAccountField;
            }
            set {
                if ((this.idCreatorAccountField.Equals(value) != true)) {
                    this.idCreatorAccountField = value;
                    this.RaisePropertyChanged("idCreatorAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string stateMatch {
            get {
                return this.stateMatchField;
            }
            set {
                if ((object.ReferenceEquals(this.stateMatchField, value) != true)) {
                    this.stateMatchField = value;
                    this.RaisePropertyChanged("stateMatch");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GameMatch", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class GameMatch : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string codeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string code {
            get {
                return this.codeField;
            }
            set {
                if ((object.ReferenceEquals(this.codeField, value) != true)) {
                    this.codeField = value;
                    this.RaisePropertyChanged("code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccount {
            get {
                return this.idAccountField;
            }
            set {
                if ((this.idAccountField.Equals(value) != true)) {
                    this.idAccountField = value;
                    this.RaisePropertyChanged("idAccount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        int AddUser(HiveGameWPFApp.HiveProxy.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(HiveGameWPFApp.HiveProxy.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfileByUsername", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileByUsernameResponse")]
        HiveGameWPFApp.HiveProxy.Profile GetUserProfileByUsername(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfileByUsername", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileByUsernameResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileByUsernameAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfile", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileResponse")]
        HiveGameWPFApp.HiveProxy.Profile GetUserProfile(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfile", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/UpdateLoginCredentialsResponse")]
        int UpdateLoginCredentials(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/UpdateLoginCredentialsResponse")]
        System.Threading.Tasks.Task<int> UpdateLoginCredentialsAsync(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        int UpdateProfile(HiveGameWPFApp.HiveProxy.Profile profile, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        System.Threading.Tasks.Task<int> UpdateProfileAsync(HiveGameWPFApp.HiveProxy.Profile profile, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyExistingAccesAccount", ReplyAction="http://tempuri.org/IUserManager/VerifyExistingAccesAccountResponse")]
        int VerifyExistingAccesAccount(string email, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyExistingAccesAccount", ReplyAction="http://tempuri.org/IUserManager/VerifyExistingAccesAccountResponse")]
        System.Threading.Tasks.Task<int> VerifyExistingAccesAccountAsync(string email, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyCredentialsResponse")]
        int VerifyCredentials(string username, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyCredentialsResponse")]
        System.Threading.Tasks.Task<int> VerifyCredentialsAsync(string username, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyPasswordCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyPasswordCredentialsResponse")]
        int VerifyPasswordCredentials(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyPasswordCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyPasswordCredentialsResponse")]
        System.Threading.Tasks.Task<int> VerifyPasswordCredentialsAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : HiveGameWPFApp.HiveProxy.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IUserManager>, HiveGameWPFApp.HiveProxy.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(HiveGameWPFApp.HiveProxy.Profile profile) {
            return base.Channel.AddUser(profile);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(HiveGameWPFApp.HiveProxy.Profile profile) {
            return base.Channel.AddUserAsync(profile);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile GetUserProfileByUsername(string username) {
            return base.Channel.GetUserProfileByUsername(username);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileByUsernameAsync(string username) {
            return base.Channel.GetUserProfileByUsernameAsync(username);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile GetUserProfile(string username, string password) {
            return base.Channel.GetUserProfile(username, password);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileAsync(string username, string password) {
            return base.Channel.GetUserProfileAsync(username, password);
        }
        
        public int UpdateLoginCredentials(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile) {
            return base.Channel.UpdateLoginCredentials(profile, updatedProfile);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLoginCredentialsAsync(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile) {
            return base.Channel.UpdateLoginCredentialsAsync(profile, updatedProfile);
        }
        
        public int UpdateProfile(HiveGameWPFApp.HiveProxy.Profile profile, string email) {
            return base.Channel.UpdateProfile(profile, email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfileAsync(HiveGameWPFApp.HiveProxy.Profile profile, string email) {
            return base.Channel.UpdateProfileAsync(profile, email);
        }
        
        public int VerifyExistingAccesAccount(string email, string username) {
            return base.Channel.VerifyExistingAccesAccount(email, username);
        }
        
        public System.Threading.Tasks.Task<int> VerifyExistingAccesAccountAsync(string email, string username) {
            return base.Channel.VerifyExistingAccesAccountAsync(email, username);
        }
        
        public int VerifyCredentials(string username, string email) {
            return base.Channel.VerifyCredentials(username, email);
        }
        
        public System.Threading.Tasks.Task<int> VerifyCredentialsAsync(string username, string email) {
            return base.Channel.VerifyCredentialsAsync(username, email);
        }
        
        public int VerifyPasswordCredentials(string email, string password) {
            return base.Channel.VerifyPasswordCredentials(email, password);
        }
        
        public System.Threading.Tasks.Task<int> VerifyPasswordCredentialsAsync(string email, string password) {
            return base.Channel.VerifyPasswordCredentialsAsync(email, password);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IFriendshipManager")]
    public interface IFriendshipManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendshipManager/DeleteFriendResponse")]
        int DeleteFriend(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendshipManager/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetAllFriends", ReplyAction="http://tempuri.org/IFriendshipManager/GetAllFriendsResponse")]
        HiveGameWPFApp.HiveProxy.Profile[] GetAllFriends(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetAllFriends", ReplyAction="http://tempuri.org/IFriendshipManager/GetAllFriendsResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetAllFriendsAsync(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetFriendByUsername", ReplyAction="http://tempuri.org/IFriendshipManager/GetFriendByUsernameResponse")]
        HiveGameWPFApp.HiveProxy.Profile GetFriendByUsername(HiveGameWPFApp.HiveProxy.Profile player, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetFriendByUsername", ReplyAction="http://tempuri.org/IFriendshipManager/GetFriendByUsernameResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetFriendByUsernameAsync(HiveGameWPFApp.HiveProxy.Profile player, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendshipManagerChannel : HiveGameWPFApp.HiveProxy.IFriendshipManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendshipManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IFriendshipManager>, HiveGameWPFApp.HiveProxy.IFriendshipManager {
        
        public FriendshipManagerClient() {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DeleteFriend(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove) {
            return base.Channel.DeleteFriend(removingPlayer, friendToRemove);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove) {
            return base.Channel.DeleteFriendAsync(removingPlayer, friendToRemove);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile[] GetAllFriends(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetAllFriends(player);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetAllFriendsAsync(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetAllFriendsAsync(player);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile GetFriendByUsername(HiveGameWPFApp.HiveProxy.Profile player, string username) {
            return base.Channel.GetFriendByUsername(player, username);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetFriendByUsernameAsync(HiveGameWPFApp.HiveProxy.Profile player, string username) {
            return base.Channel.GetFriendByUsernameAsync(player, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IFriendRequestManager")]
    public interface IFriendRequestManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/CreateFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/CreateFriendRequestResponse")]
        int CreateFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/CreateFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/CreateFriendRequestResponse")]
        System.Threading.Tasks.Task<int> CreateFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/GetFriendRequests", ReplyAction="http://tempuri.org/IFriendRequestManager/GetFriendRequestsResponse")]
        HiveGameWPFApp.HiveProxy.Profile[] GetFriendRequests(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/GetFriendRequests", ReplyAction="http://tempuri.org/IFriendRequestManager/GetFriendRequestsResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetFriendRequestsAsync(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/AcceptFriendRequestResponse")]
        int AcceptFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/AcceptFriendRequestResponse")]
        System.Threading.Tasks.Task<int> AcceptFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/DeclineFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/DeclineFriendRequestResponse")]
        int DeclineFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/DeclineFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/DeclineFriendRequestResponse")]
        System.Threading.Tasks.Task<int> DeclineFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegistered", ReplyAction="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegisteredResponse")]
        int VerifyFriendRequestRegistered(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegistered", ReplyAction="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegisteredResponse")]
        System.Threading.Tasks.Task<int> VerifyFriendRequestRegisteredAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendRequestManagerChannel : HiveGameWPFApp.HiveProxy.IFriendRequestManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendRequestManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IFriendRequestManager>, HiveGameWPFApp.HiveProxy.IFriendRequestManager {
        
        public FriendRequestManagerClient() {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.CreateFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> CreateFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.CreateFriendRequestAsync(playerOne, playerTwo);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile[] GetFriendRequests(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetFriendRequests(player);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetFriendRequestsAsync(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetFriendRequestsAsync(player);
        }
        
        public int AcceptFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.AcceptFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> AcceptFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.AcceptFriendRequestAsync(playerOne, playerTwo);
        }
        
        public int DeclineFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.DeclineFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> DeclineFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.DeclineFriendRequestAsync(playerOne, playerTwo);
        }
        
        public int VerifyFriendRequestRegistered(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.VerifyFriendRequestRegistered(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> VerifyFriendRequestRegisteredAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.VerifyFriendRequestRegisteredAsync(playerOne, playerTwo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IChatManager", CallbackContract=typeof(HiveGameWPFApp.HiveProxy.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChatLobby")]
        void ConnectToChatLobby(HiveGameWPFApp.HiveProxy.Profile user, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChatLobby")]
        System.Threading.Tasks.Task ConnectToChatLobbyAsync(HiveGameWPFApp.HiveProxy.Profile user, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessages")]
        void SendMessages(HiveGameWPFApp.HiveProxy.Message message, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessages")]
        System.Threading.Tasks.Task SendMessagesAsync(HiveGameWPFApp.HiveProxy.Message message, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/DisconectPlayerFromChat", ReplyAction="http://tempuri.org/IChatManager/DisconectPlayerFromChatResponse")]
        int DisconectPlayerFromChat(HiveGameWPFApp.HiveProxy.Profile user, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/DisconectPlayerFromChat", ReplyAction="http://tempuri.org/IChatManager/DisconectPlayerFromChatResponse")]
        System.Threading.Tasks.Task<int> DisconectPlayerFromChatAsync(HiveGameWPFApp.HiveProxy.Profile user, string code);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/ReceiveMessage", ReplyAction="http://tempuri.org/IChatManager/ReceiveMessageResponse")]
        void ReceiveMessage(HiveGameWPFApp.HiveProxy.Message[] messages);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : HiveGameWPFApp.HiveProxy.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<HiveGameWPFApp.HiveProxy.IChatManager>, HiveGameWPFApp.HiveProxy.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ConnectToChatLobby(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            base.Channel.ConnectToChatLobby(user, code);
        }
        
        public System.Threading.Tasks.Task ConnectToChatLobbyAsync(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            return base.Channel.ConnectToChatLobbyAsync(user, code);
        }
        
        public void SendMessages(HiveGameWPFApp.HiveProxy.Message message, string code) {
            base.Channel.SendMessages(message, code);
        }
        
        public System.Threading.Tasks.Task SendMessagesAsync(HiveGameWPFApp.HiveProxy.Message message, string code) {
            return base.Channel.SendMessagesAsync(message, code);
        }
        
        public int DisconectPlayerFromChat(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            return base.Channel.DisconectPlayerFromChat(user, code);
        }
        
        public System.Threading.Tasks.Task<int> DisconectPlayerFromChatAsync(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            return base.Channel.DisconectPlayerFromChatAsync(user, code);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.ILeaderBoardManager")]
    public interface ILeaderBoardManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateWinnerResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateWinnerResultToPlayerLeaderBoardRespo" +
            "nse")]
        int UpdateWinnerResultToPlayerLeaderBoard(int idAccounr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateWinnerResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateWinnerResultToPlayerLeaderBoardRespo" +
            "nse")]
        System.Threading.Tasks.Task<int> UpdateWinnerResultToPlayerLeaderBoardAsync(int idAccounr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateLoserResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateLoserResultToPlayerLeaderBoardRespon" +
            "se")]
        int UpdateLoserResultToPlayerLeaderBoard(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateLoserResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateLoserResultToPlayerLeaderBoardRespon" +
            "se")]
        System.Threading.Tasks.Task<int> UpdateLoserResultToPlayerLeaderBoardAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateDrawResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateDrawResultToPlayerLeaderBoardRespons" +
            "e")]
        int UpdateDrawResultToPlayerLeaderBoard(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/UpdateDrawResultToPlayerLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/UpdateDrawResultToPlayerLeaderBoardRespons" +
            "e")]
        System.Threading.Tasks.Task<int> UpdateDrawResultToPlayerLeaderBoardAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/GetPersonalLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/GetPersonalLeaderBoardResponse")]
        HiveGameWPFApp.HiveProxy.LeaderBoardPlayer GetPersonalLeaderBoard(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/GetPersonalLeaderBoard", ReplyAction="http://tempuri.org/ILeaderBoardManager/GetPersonalLeaderBoardResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.LeaderBoardPlayer> GetPersonalLeaderBoardAsync(int idAccount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/GetAllPlayersLeaderboards", ReplyAction="http://tempuri.org/ILeaderBoardManager/GetAllPlayersLeaderboardsResponse")]
        HiveGameWPFApp.HiveProxy.LeaderBoardPlayer[] GetAllPlayersLeaderboards();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILeaderBoardManager/GetAllPlayersLeaderboards", ReplyAction="http://tempuri.org/ILeaderBoardManager/GetAllPlayersLeaderboardsResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.LeaderBoardPlayer[]> GetAllPlayersLeaderboardsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILeaderBoardManagerChannel : HiveGameWPFApp.HiveProxy.ILeaderBoardManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LeaderBoardManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.ILeaderBoardManager>, HiveGameWPFApp.HiveProxy.ILeaderBoardManager {
        
        public LeaderBoardManagerClient() {
        }
        
        public LeaderBoardManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LeaderBoardManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderBoardManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LeaderBoardManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int UpdateWinnerResultToPlayerLeaderBoard(int idAccounr) {
            return base.Channel.UpdateWinnerResultToPlayerLeaderBoard(idAccounr);
        }
        
        public System.Threading.Tasks.Task<int> UpdateWinnerResultToPlayerLeaderBoardAsync(int idAccounr) {
            return base.Channel.UpdateWinnerResultToPlayerLeaderBoardAsync(idAccounr);
        }
        
        public int UpdateLoserResultToPlayerLeaderBoard(int idAccount) {
            return base.Channel.UpdateLoserResultToPlayerLeaderBoard(idAccount);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLoserResultToPlayerLeaderBoardAsync(int idAccount) {
            return base.Channel.UpdateLoserResultToPlayerLeaderBoardAsync(idAccount);
        }
        
        public int UpdateDrawResultToPlayerLeaderBoard(int idAccount) {
            return base.Channel.UpdateDrawResultToPlayerLeaderBoard(idAccount);
        }
        
        public System.Threading.Tasks.Task<int> UpdateDrawResultToPlayerLeaderBoardAsync(int idAccount) {
            return base.Channel.UpdateDrawResultToPlayerLeaderBoardAsync(idAccount);
        }
        
        public HiveGameWPFApp.HiveProxy.LeaderBoardPlayer GetPersonalLeaderBoard(int idAccount) {
            return base.Channel.GetPersonalLeaderBoard(idAccount);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.LeaderBoardPlayer> GetPersonalLeaderBoardAsync(int idAccount) {
            return base.Channel.GetPersonalLeaderBoardAsync(idAccount);
        }
        
        public HiveGameWPFApp.HiveProxy.LeaderBoardPlayer[] GetAllPlayersLeaderboards() {
            return base.Channel.GetAllPlayersLeaderboards();
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.LeaderBoardPlayer[]> GetAllPlayersLeaderboardsAsync() {
            return base.Channel.GetAllPlayersLeaderboardsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IEmailVerificationManager")]
    public interface IEmailVerificationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationEmail", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationEmailResponse")]
        int SendVerificationEmail(string emailToSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/SendVerificationEmail", ReplyAction="http://tempuri.org/IEmailVerificationManager/SendVerificationEmailResponse")]
        System.Threading.Tasks.Task<int> SendVerificationEmailAsync(string emailToSend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCodeVerification", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeVerificationResponse")]
        bool VerifyCodeVerification(HiveGameWPFApp.HiveProxy.UserVerificator userVerificator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/VerifyCodeVerification", ReplyAction="http://tempuri.org/IEmailVerificationManager/VerifyCodeVerificationResponse")]
        System.Threading.Tasks.Task<bool> VerifyCodeVerificationAsync(HiveGameWPFApp.HiveProxy.UserVerificator userVerificator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/GenerateVerificatonCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/GenerateVerificatonCodeResponse")]
        string GenerateVerificatonCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailVerificationManager/GenerateVerificatonCode", ReplyAction="http://tempuri.org/IEmailVerificationManager/GenerateVerificatonCodeResponse")]
        System.Threading.Tasks.Task<string> GenerateVerificatonCodeAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailVerificationManagerChannel : HiveGameWPFApp.HiveProxy.IEmailVerificationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailVerificationManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IEmailVerificationManager>, HiveGameWPFApp.HiveProxy.IEmailVerificationManager {
        
        public EmailVerificationManagerClient() {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailVerificationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendVerificationEmail(string emailToSend) {
            return base.Channel.SendVerificationEmail(emailToSend);
        }
        
        public System.Threading.Tasks.Task<int> SendVerificationEmailAsync(string emailToSend) {
            return base.Channel.SendVerificationEmailAsync(emailToSend);
        }
        
        public bool VerifyCodeVerification(HiveGameWPFApp.HiveProxy.UserVerificator userVerificator) {
            return base.Channel.VerifyCodeVerification(userVerificator);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyCodeVerificationAsync(HiveGameWPFApp.HiveProxy.UserVerificator userVerificator) {
            return base.Channel.VerifyCodeVerificationAsync(userVerificator);
        }
        
        public string GenerateVerificatonCode(string email) {
            return base.Channel.GenerateVerificatonCode(email);
        }
        
        public System.Threading.Tasks.Task<string> GenerateVerificatonCodeAsync(string email) {
            return base.Channel.GenerateVerificatonCodeAsync(email);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IEmailInvitationManager")]
    public interface IEmailInvitationManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailInvitationManager/SendEmailInvitation", ReplyAction="http://tempuri.org/IEmailInvitationManager/SendEmailInvitationResponse")]
        int SendEmailInvitation(HiveGameWPFApp.HiveProxy.UserVerificator verificator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailInvitationManager/SendEmailInvitation", ReplyAction="http://tempuri.org/IEmailInvitationManager/SendEmailInvitationResponse")]
        System.Threading.Tasks.Task<int> SendEmailInvitationAsync(HiveGameWPFApp.HiveProxy.UserVerificator verificator);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailInvitationManagerChannel : HiveGameWPFApp.HiveProxy.IEmailInvitationManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailInvitationManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IEmailInvitationManager>, HiveGameWPFApp.HiveProxy.IEmailInvitationManager {
        
        public EmailInvitationManagerClient() {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailInvitationManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailInvitationManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int SendEmailInvitation(HiveGameWPFApp.HiveProxy.UserVerificator verificator) {
            return base.Channel.SendEmailInvitation(verificator);
        }
        
        public System.Threading.Tasks.Task<int> SendEmailInvitationAsync(HiveGameWPFApp.HiveProxy.UserVerificator verificator) {
            return base.Channel.SendEmailInvitationAsync(verificator);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IUserSessionManager")]
    public interface IUserSessionManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/ConnectToGame", ReplyAction="http://tempuri.org/IUserSessionManager/ConnectToGameResponse")]
        int ConnectToGame(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/ConnectToGame", ReplyAction="http://tempuri.org/IUserSessionManager/ConnectToGameResponse")]
        System.Threading.Tasks.Task<int> ConnectToGameAsync(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/Disconnect", ReplyAction="http://tempuri.org/IUserSessionManager/DisconnectResponse")]
        int Disconnect(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/Disconnect", ReplyAction="http://tempuri.org/IUserSessionManager/DisconnectResponse")]
        System.Threading.Tasks.Task<int> DisconnectAsync(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/VerifyConnectivity", ReplyAction="http://tempuri.org/IUserSessionManager/VerifyConnectivityResponse")]
        bool VerifyConnectivity(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserSessionManager/VerifyConnectivity", ReplyAction="http://tempuri.org/IUserSessionManager/VerifyConnectivityResponse")]
        System.Threading.Tasks.Task<bool> VerifyConnectivityAsync(HiveGameWPFApp.HiveProxy.UserSession user);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserSessionManagerChannel : HiveGameWPFApp.HiveProxy.IUserSessionManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserSessionManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IUserSessionManager>, HiveGameWPFApp.HiveProxy.IUserSessionManager {
        
        public UserSessionManagerClient() {
        }
        
        public UserSessionManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserSessionManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserSessionManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserSessionManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int ConnectToGame(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.ConnectToGame(user);
        }
        
        public System.Threading.Tasks.Task<int> ConnectToGameAsync(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.ConnectToGameAsync(user);
        }
        
        public int Disconnect(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.Disconnect(user);
        }
        
        public System.Threading.Tasks.Task<int> DisconnectAsync(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.DisconnectAsync(user);
        }
        
        public bool VerifyConnectivity(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.VerifyConnectivity(user);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyConnectivityAsync(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.VerifyConnectivityAsync(user);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IMatchCreatorManager")]
    public interface IMatchCreatorManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/CreateMatch", ReplyAction="http://tempuri.org/IMatchCreatorManager/CreateMatchResponse")]
        int CreateMatch(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/CreateMatch", ReplyAction="http://tempuri.org/IMatchCreatorManager/CreateMatchResponse")]
        System.Threading.Tasks.Task<int> CreateMatchAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/UpdateMatchState", ReplyAction="http://tempuri.org/IMatchCreatorManager/UpdateMatchStateResponse")]
        int UpdateMatchState(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/UpdateMatchState", ReplyAction="http://tempuri.org/IMatchCreatorManager/UpdateMatchStateResponse")]
        System.Threading.Tasks.Task<int> UpdateMatchStateAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyExistingActiveMatch", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyExistingActiveMatchResponse")]
        int VerifyExistingActiveMatch(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyExistingActiveMatch", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyExistingActiveMatchResponse")]
        System.Threading.Tasks.Task<int> VerifyExistingActiveMatchAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyIfLobbyIsFull", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyIfLobbyIsFullResponse")]
        bool VerifyIfLobbyIsFull(string codeLobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyIfLobbyIsFull", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyIfLobbyIsFullResponse")]
        System.Threading.Tasks.Task<bool> VerifyIfLobbyIsFullAsync(string codeLobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyExistingCode", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyExistingCodeResponse")]
        bool VerifyExistingCode(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/VerifyExistingCode", ReplyAction="http://tempuri.org/IMatchCreatorManager/VerifyExistingCodeResponse")]
        System.Threading.Tasks.Task<bool> VerifyExistingCodeAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/GenerateLobbyCode", ReplyAction="http://tempuri.org/IMatchCreatorManager/GenerateLobbyCodeResponse")]
        string GenerateLobbyCode(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMatchCreatorManager/GenerateLobbyCode", ReplyAction="http://tempuri.org/IMatchCreatorManager/GenerateLobbyCodeResponse")]
        System.Threading.Tasks.Task<string> GenerateLobbyCodeAsync(string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMatchCreatorManagerChannel : HiveGameWPFApp.HiveProxy.IMatchCreatorManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MatchCreatorManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IMatchCreatorManager>, HiveGameWPFApp.HiveProxy.IMatchCreatorManager {
        
        public MatchCreatorManagerClient() {
        }
        
        public MatchCreatorManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MatchCreatorManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchCreatorManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MatchCreatorManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateMatch(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.CreateMatch(matchCreator);
        }
        
        public System.Threading.Tasks.Task<int> CreateMatchAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.CreateMatchAsync(matchCreator);
        }
        
        public int UpdateMatchState(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.UpdateMatchState(matchCreator);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMatchStateAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.UpdateMatchStateAsync(matchCreator);
        }
        
        public int VerifyExistingActiveMatch(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.VerifyExistingActiveMatch(matchCreator);
        }
        
        public System.Threading.Tasks.Task<int> VerifyExistingActiveMatchAsync(HiveGameWPFApp.HiveProxy.MatchCreator matchCreator) {
            return base.Channel.VerifyExistingActiveMatchAsync(matchCreator);
        }
        
        public bool VerifyIfLobbyIsFull(string codeLobby) {
            return base.Channel.VerifyIfLobbyIsFull(codeLobby);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyIfLobbyIsFullAsync(string codeLobby) {
            return base.Channel.VerifyIfLobbyIsFullAsync(codeLobby);
        }
        
        public bool VerifyExistingCode(string code) {
            return base.Channel.VerifyExistingCode(code);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyExistingCodeAsync(string code) {
            return base.Channel.VerifyExistingCodeAsync(code);
        }
        
        public string GenerateLobbyCode(string email) {
            return base.Channel.GenerateLobbyCode(email);
        }
        
        public System.Threading.Tasks.Task<string> GenerateLobbyCodeAsync(string email) {
            return base.Channel.GenerateLobbyCodeAsync(email);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IFriendsManager", CallbackContract=typeof(HiveGameWPFApp.HiveProxy.IFriendsManagerCallback))]
    public interface IFriendsManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/GetFriendsList")]
        void GetFriendsList(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/GetFriendsList")]
        System.Threading.Tasks.Task GetFriendsListAsync(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/JoinAsConnectedFriend")]
        void JoinAsConnectedFriend(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IFriendsManager/JoinAsConnectedFriend")]
        System.Threading.Tasks.Task JoinAsConnectedFriendAsync(HiveGameWPFApp.HiveProxy.UserSession user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteUserAsConnectedFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteUserAsConnectedFriendResponse")]
        int DeleteUserAsConnectedFriend(HiveGameWPFApp.HiveProxy.UserSession username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/DeleteUserAsConnectedFriend", ReplyAction="http://tempuri.org/IFriendsManager/DeleteUserAsConnectedFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteUserAsConnectedFriendAsync(HiveGameWPFApp.HiveProxy.UserSession username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendsManager/ObtainConnectedFriends", ReplyAction="http://tempuri.org/IFriendsManager/ObtainConnectedFriendsResponse")]
        void ObtainConnectedFriends(HiveGameWPFApp.HiveProxy.UserSession[] connectedFriends);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendsManagerChannel : HiveGameWPFApp.HiveProxy.IFriendsManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendsManagerClient : System.ServiceModel.DuplexClientBase<HiveGameWPFApp.HiveProxy.IFriendsManager>, HiveGameWPFApp.HiveProxy.IFriendsManager {
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public FriendsManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void GetFriendsList(HiveGameWPFApp.HiveProxy.UserSession user) {
            base.Channel.GetFriendsList(user);
        }
        
        public System.Threading.Tasks.Task GetFriendsListAsync(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.GetFriendsListAsync(user);
        }
        
        public void JoinAsConnectedFriend(HiveGameWPFApp.HiveProxy.UserSession user) {
            base.Channel.JoinAsConnectedFriend(user);
        }
        
        public System.Threading.Tasks.Task JoinAsConnectedFriendAsync(HiveGameWPFApp.HiveProxy.UserSession user) {
            return base.Channel.JoinAsConnectedFriendAsync(user);
        }
        
        public int DeleteUserAsConnectedFriend(HiveGameWPFApp.HiveProxy.UserSession username) {
            return base.Channel.DeleteUserAsConnectedFriend(username);
        }
        
        public System.Threading.Tasks.Task<int> DeleteUserAsConnectedFriendAsync(HiveGameWPFApp.HiveProxy.UserSession username) {
            return base.Channel.DeleteUserAsConnectedFriendAsync(username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.ILobbyManager", CallbackContract=typeof(HiveGameWPFApp.HiveProxy.ILobbyManagerCallback))]
    public interface ILobbyManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/ConnectToLobby")]
        void ConnectToLobby(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/ConnectToLobby")]
        System.Threading.Tasks.Task ConnectToLobbyAsync(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeavePlayerFromLobby")]
        void LeavePlayerFromLobby(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby, bool isKicked);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/LeavePlayerFromLobby")]
        System.Threading.Tasks.Task LeavePlayerFromLobbyAsync(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby, bool isKicked);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/StartMatch")]
        void StartMatch(string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ILobbyManager/StartMatch")]
        System.Threading.Tasks.Task StartMatchAsync(string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/VerifyCreatorOfTheMatch", ReplyAction="http://tempuri.org/ILobbyManager/VerifyCreatorOfTheMatchResponse")]
        int VerifyCreatorOfTheMatch(HiveGameWPFApp.HiveProxy.GameMatch match);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/VerifyCreatorOfTheMatch", ReplyAction="http://tempuri.org/ILobbyManager/VerifyCreatorOfTheMatchResponse")]
        System.Threading.Tasks.Task<int> VerifyCreatorOfTheMatchAsync(HiveGameWPFApp.HiveProxy.GameMatch match);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ReceivePlayersToLobby", ReplyAction="http://tempuri.org/ILobbyManager/ReceivePlayersToLobbyResponse")]
        void ReceivePlayersToLobby(HiveGameWPFApp.HiveProxy.UserSession[] user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ReceiveKickedNotification", ReplyAction="http://tempuri.org/ILobbyManager/ReceiveKickedNotificationResponse")]
        void ReceiveKickedNotification();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILobbyManager/ReceiveStartMatchNotification", ReplyAction="http://tempuri.org/ILobbyManager/ReceiveStartMatchNotificationResponse")]
        void ReceiveStartMatchNotification();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILobbyManagerChannel : HiveGameWPFApp.HiveProxy.ILobbyManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LobbyManagerClient : System.ServiceModel.DuplexClientBase<HiveGameWPFApp.HiveProxy.ILobbyManager>, HiveGameWPFApp.HiveProxy.ILobbyManager {
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public LobbyManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ConnectToLobby(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby) {
            base.Channel.ConnectToLobby(lobbyPlayer, codeLobby);
        }
        
        public System.Threading.Tasks.Task ConnectToLobbyAsync(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby) {
            return base.Channel.ConnectToLobbyAsync(lobbyPlayer, codeLobby);
        }
        
        public void LeavePlayerFromLobby(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby, bool isKicked) {
            base.Channel.LeavePlayerFromLobby(lobbyPlayer, codeLobby, isKicked);
        }
        
        public System.Threading.Tasks.Task LeavePlayerFromLobbyAsync(HiveGameWPFApp.HiveProxy.UserSession lobbyPlayer, string codeLobby, bool isKicked) {
            return base.Channel.LeavePlayerFromLobbyAsync(lobbyPlayer, codeLobby, isKicked);
        }
        
        public void StartMatch(string code) {
            base.Channel.StartMatch(code);
        }
        
        public System.Threading.Tasks.Task StartMatchAsync(string code) {
            return base.Channel.StartMatchAsync(code);
        }
        
        public int VerifyCreatorOfTheMatch(HiveGameWPFApp.HiveProxy.GameMatch match) {
            return base.Channel.VerifyCreatorOfTheMatch(match);
        }
        
        public System.Threading.Tasks.Task<int> VerifyCreatorOfTheMatchAsync(HiveGameWPFApp.HiveProxy.GameMatch match) {
            return base.Channel.VerifyCreatorOfTheMatchAsync(match);
        }
    }
}
