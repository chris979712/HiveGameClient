//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HiveGameWPFApp.HiveProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessAccount", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(HiveGameWPFApp.HiveProxy.Profile))]
    public partial class AccessAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccesAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int reputationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccesAccount {
            get {
                return this.idAccesAccountField;
            }
            set {
                if ((this.idAccesAccountField.Equals(value) != true)) {
                    this.idAccesAccountField = value;
                    this.RaisePropertyChanged("idAccesAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int reputation {
            get {
                return this.reputationField;
            }
            set {
                if ((this.reputationField.Equals(value) != true)) {
                    this.reputationField = value;
                    this.RaisePropertyChanged("reputation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Profile", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Profile : HiveGameWPFApp.HiveProxy.AccessAccount {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime createdDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idProfileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string imagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nicknameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime createdDate {
            get {
                return this.createdDateField;
            }
            set {
                if ((this.createdDateField.Equals(value) != true)) {
                    this.createdDateField = value;
                    this.RaisePropertyChanged("createdDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idAccount {
            get {
                return this.idAccountField;
            }
            set {
                if ((this.idAccountField.Equals(value) != true)) {
                    this.idAccountField = value;
                    this.RaisePropertyChanged("idAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idProfile {
            get {
                return this.idProfileField;
            }
            set {
                if ((this.idProfileField.Equals(value) != true)) {
                    this.idProfileField = value;
                    this.RaisePropertyChanged("idProfile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagePath {
            get {
                return this.imagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.imagePathField, value) != true)) {
                    this.imagePathField = value;
                    this.RaisePropertyChanged("imagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nickname {
            get {
                return this.nicknameField;
            }
            set {
                if ((object.ReferenceEquals(this.nicknameField, value) != true)) {
                    this.nicknameField = value;
                    this.RaisePropertyChanged("nickname");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/HiveGameService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string textField;
        
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string text {
            get {
                return this.textField;
            }
            set {
                if ((object.ReferenceEquals(this.textField, value) != true)) {
                    this.textField = value;
                    this.RaisePropertyChanged("text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IUserManager")]
    public interface IUserManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        int AddUser(HiveGameWPFApp.HiveProxy.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/AddUser", ReplyAction="http://tempuri.org/IUserManager/AddUserResponse")]
        System.Threading.Tasks.Task<int> AddUserAsync(HiveGameWPFApp.HiveProxy.Profile profile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfile", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileResponse")]
        HiveGameWPFApp.HiveProxy.Profile GetUserProfile(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/GetUserProfile", ReplyAction="http://tempuri.org/IUserManager/GetUserProfileResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/UpdateLoginCredentialsResponse")]
        int UpdateLoginCredentials(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateLoginCredentials", ReplyAction="http://tempuri.org/IUserManager/UpdateLoginCredentialsResponse")]
        System.Threading.Tasks.Task<int> UpdateLoginCredentialsAsync(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        int UpdateProfile(HiveGameWPFApp.HiveProxy.Profile profile, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/UpdateProfile", ReplyAction="http://tempuri.org/IUserManager/UpdateProfileResponse")]
        System.Threading.Tasks.Task<int> UpdateProfileAsync(HiveGameWPFApp.HiveProxy.Profile profile, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyExistingAccesAccount", ReplyAction="http://tempuri.org/IUserManager/VerifyExistingAccesAccountResponse")]
        int VerifyExistingAccesAccount(string email, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyExistingAccesAccount", ReplyAction="http://tempuri.org/IUserManager/VerifyExistingAccesAccountResponse")]
        System.Threading.Tasks.Task<int> VerifyExistingAccesAccountAsync(string email, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyCredentialsResponse")]
        int VerifyCredentials(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManager/VerifyCredentials", ReplyAction="http://tempuri.org/IUserManager/VerifyCredentialsResponse")]
        System.Threading.Tasks.Task<int> VerifyCredentialsAsync(string email, string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerChannel : HiveGameWPFApp.HiveProxy.IUserManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IUserManager>, HiveGameWPFApp.HiveProxy.IUserManager {
        
        public UserManagerClient() {
        }
        
        public UserManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddUser(HiveGameWPFApp.HiveProxy.Profile profile) {
            return base.Channel.AddUser(profile);
        }
        
        public System.Threading.Tasks.Task<int> AddUserAsync(HiveGameWPFApp.HiveProxy.Profile profile) {
            return base.Channel.AddUserAsync(profile);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile GetUserProfile(string username, string password) {
            return base.Channel.GetUserProfile(username, password);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetUserProfileAsync(string username, string password) {
            return base.Channel.GetUserProfileAsync(username, password);
        }
        
        public int UpdateLoginCredentials(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile) {
            return base.Channel.UpdateLoginCredentials(profile, updatedProfile);
        }
        
        public System.Threading.Tasks.Task<int> UpdateLoginCredentialsAsync(HiveGameWPFApp.HiveProxy.AccessAccount profile, HiveGameWPFApp.HiveProxy.AccessAccount updatedProfile) {
            return base.Channel.UpdateLoginCredentialsAsync(profile, updatedProfile);
        }
        
        public int UpdateProfile(HiveGameWPFApp.HiveProxy.Profile profile, string email) {
            return base.Channel.UpdateProfile(profile, email);
        }
        
        public System.Threading.Tasks.Task<int> UpdateProfileAsync(HiveGameWPFApp.HiveProxy.Profile profile, string email) {
            return base.Channel.UpdateProfileAsync(profile, email);
        }
        
        public int VerifyExistingAccesAccount(string email, string username) {
            return base.Channel.VerifyExistingAccesAccount(email, username);
        }
        
        public System.Threading.Tasks.Task<int> VerifyExistingAccesAccountAsync(string email, string username) {
            return base.Channel.VerifyExistingAccesAccountAsync(email, username);
        }
        
        public int VerifyCredentials(string email, string password) {
            return base.Channel.VerifyCredentials(email, password);
        }
        
        public System.Threading.Tasks.Task<int> VerifyCredentialsAsync(string email, string password) {
            return base.Channel.VerifyCredentialsAsync(email, password);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IFriendshipManager")]
    public interface IFriendshipManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendshipManager/DeleteFriendResponse")]
        int DeleteFriend(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/DeleteFriend", ReplyAction="http://tempuri.org/IFriendshipManager/DeleteFriendResponse")]
        System.Threading.Tasks.Task<int> DeleteFriendAsync(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetAllFriends", ReplyAction="http://tempuri.org/IFriendshipManager/GetAllFriendsResponse")]
        HiveGameWPFApp.HiveProxy.Profile[] GetAllFriends(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetAllFriends", ReplyAction="http://tempuri.org/IFriendshipManager/GetAllFriendsResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetAllFriendsAsync(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetFriendByUsername", ReplyAction="http://tempuri.org/IFriendshipManager/GetFriendByUsernameResponse")]
        HiveGameWPFApp.HiveProxy.Profile GetFriendByUsername(HiveGameWPFApp.HiveProxy.Profile player, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendshipManager/GetFriendByUsername", ReplyAction="http://tempuri.org/IFriendshipManager/GetFriendByUsernameResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetFriendByUsernameAsync(HiveGameWPFApp.HiveProxy.Profile player, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendshipManagerChannel : HiveGameWPFApp.HiveProxy.IFriendshipManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendshipManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IFriendshipManager>, HiveGameWPFApp.HiveProxy.IFriendshipManager {
        
        public FriendshipManagerClient() {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendshipManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int DeleteFriend(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove) {
            return base.Channel.DeleteFriend(removingPlayer, friendToRemove);
        }
        
        public System.Threading.Tasks.Task<int> DeleteFriendAsync(HiveGameWPFApp.HiveProxy.Profile removingPlayer, HiveGameWPFApp.HiveProxy.Profile friendToRemove) {
            return base.Channel.DeleteFriendAsync(removingPlayer, friendToRemove);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile[] GetAllFriends(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetAllFriends(player);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetAllFriendsAsync(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetAllFriendsAsync(player);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile GetFriendByUsername(HiveGameWPFApp.HiveProxy.Profile player, string username) {
            return base.Channel.GetFriendByUsername(player, username);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile> GetFriendByUsernameAsync(HiveGameWPFApp.HiveProxy.Profile player, string username) {
            return base.Channel.GetFriendByUsernameAsync(player, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IFriendRequestManager")]
    public interface IFriendRequestManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/CreateFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/CreateFriendRequestResponse")]
        int CreateFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/CreateFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/CreateFriendRequestResponse")]
        System.Threading.Tasks.Task<int> CreateFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/GetFriendRequests", ReplyAction="http://tempuri.org/IFriendRequestManager/GetFriendRequestsResponse")]
        HiveGameWPFApp.HiveProxy.Profile[] GetFriendRequests(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/GetFriendRequests", ReplyAction="http://tempuri.org/IFriendRequestManager/GetFriendRequestsResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetFriendRequestsAsync(HiveGameWPFApp.HiveProxy.Profile player);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/AcceptFriendRequestResponse")]
        int AcceptFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/AcceptFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/AcceptFriendRequestResponse")]
        System.Threading.Tasks.Task<int> AcceptFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/DeclineFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/DeclineFriendRequestResponse")]
        int DeclineFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/DeclineFriendRequest", ReplyAction="http://tempuri.org/IFriendRequestManager/DeclineFriendRequestResponse")]
        System.Threading.Tasks.Task<int> DeclineFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegistered", ReplyAction="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegisteredResponse")]
        int VerifyFriendRequestRegistered(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegistered", ReplyAction="http://tempuri.org/IFriendRequestManager/VerifyFriendRequestRegisteredResponse")]
        System.Threading.Tasks.Task<int> VerifyFriendRequestRegisteredAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFriendRequestManagerChannel : HiveGameWPFApp.HiveProxy.IFriendRequestManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FriendRequestManagerClient : System.ServiceModel.ClientBase<HiveGameWPFApp.HiveProxy.IFriendRequestManager>, HiveGameWPFApp.HiveProxy.IFriendRequestManager {
        
        public FriendRequestManagerClient() {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FriendRequestManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.CreateFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> CreateFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.CreateFriendRequestAsync(playerOne, playerTwo);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile[] GetFriendRequests(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetFriendRequests(player);
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetFriendRequestsAsync(HiveGameWPFApp.HiveProxy.Profile player) {
            return base.Channel.GetFriendRequestsAsync(player);
        }
        
        public int AcceptFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.AcceptFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> AcceptFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.AcceptFriendRequestAsync(playerOne, playerTwo);
        }
        
        public int DeclineFriendRequest(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.DeclineFriendRequest(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> DeclineFriendRequestAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.DeclineFriendRequestAsync(playerOne, playerTwo);
        }
        
        public int VerifyFriendRequestRegistered(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.VerifyFriendRequestRegistered(playerOne, playerTwo);
        }
        
        public System.Threading.Tasks.Task<int> VerifyFriendRequestRegisteredAsync(HiveGameWPFApp.HiveProxy.Profile playerOne, HiveGameWPFApp.HiveProxy.Profile playerTwo) {
            return base.Channel.VerifyFriendRequestRegisteredAsync(playerOne, playerTwo);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HiveProxy.IChatManager", CallbackContract=typeof(HiveGameWPFApp.HiveProxy.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChatLobby")]
        void ConnectToChatLobby(HiveGameWPFApp.HiveProxy.Profile user, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/ConnectToChatLobby")]
        System.Threading.Tasks.Task ConnectToChatLobbyAsync(HiveGameWPFApp.HiveProxy.Profile user, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessages")]
        void SendMessages(HiveGameWPFApp.HiveProxy.Message message, string code);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessages")]
        System.Threading.Tasks.Task SendMessagesAsync(HiveGameWPFApp.HiveProxy.Message message, string code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/GetConnectedUsers", ReplyAction="http://tempuri.org/IChatManager/GetConnectedUsersResponse")]
        HiveGameWPFApp.HiveProxy.Profile[] GetConnectedUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/GetConnectedUsers", ReplyAction="http://tempuri.org/IChatManager/GetConnectedUsersResponse")]
        System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetConnectedUsersAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/ReceiveMessage", ReplyAction="http://tempuri.org/IChatManager/ReceiveMessageResponse")]
        void ReceiveMessage(HiveGameWPFApp.HiveProxy.Message[] messages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatManager/UserConnected", ReplyAction="http://tempuri.org/IChatManager/UserConnectedResponse")]
        void UserConnected(HiveGameWPFApp.HiveProxy.Profile[] users);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : HiveGameWPFApp.HiveProxy.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<HiveGameWPFApp.HiveProxy.IChatManager>, HiveGameWPFApp.HiveProxy.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void ConnectToChatLobby(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            base.Channel.ConnectToChatLobby(user, code);
        }
        
        public System.Threading.Tasks.Task ConnectToChatLobbyAsync(HiveGameWPFApp.HiveProxy.Profile user, string code) {
            return base.Channel.ConnectToChatLobbyAsync(user, code);
        }
        
        public void SendMessages(HiveGameWPFApp.HiveProxy.Message message, string code) {
            base.Channel.SendMessages(message, code);
        }
        
        public System.Threading.Tasks.Task SendMessagesAsync(HiveGameWPFApp.HiveProxy.Message message, string code) {
            return base.Channel.SendMessagesAsync(message, code);
        }
        
        public HiveGameWPFApp.HiveProxy.Profile[] GetConnectedUsers() {
            return base.Channel.GetConnectedUsers();
        }
        
        public System.Threading.Tasks.Task<HiveGameWPFApp.HiveProxy.Profile[]> GetConnectedUsersAsync() {
            return base.Channel.GetConnectedUsersAsync();
        }
    }
}
